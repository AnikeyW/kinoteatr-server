generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Series {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  releaseYear Int      @map("release_year")
  poster      String
  seasons     Season[] @relation("SeriesToSeason")
}

model Season {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  order       Int       @unique
  poster      String
  series      Series    @relation("SeriesToSeason", fields: [seriesId], references: [id])
  seriesId    Int       @map("series_id")
  episodes    Episode[] @relation("SeasonToEpisode")
}

model Episode {
  id           Int         @id @default(autoincrement())
  title        String
  description  String
  order        Int         @unique
  skipRepeat   Int?        @map("skip_repeat")
  skipIntro    Int?        @map("skip_intro")
  skipCredits  Int?        @map("skip_credits")
  season       Season      @relation("SeasonToEpisode", fields: [seasonId], references: [id])
  seasonId     Int         @map("season_id")
  views        Int         @default(0)
  duration     Int
  poster       String
  thumbnails   String[]
  isProcessing Boolean     @map("is_processing")
  srcHls       String      @map("src_hls")
  srcDash      String      @map("src_dash")
  releaseDate  DateTime    @map("release_date")
  subtitles    Subtitles[] @relation("EpisodeToSubtitles")
}

model Admin {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}

model Token {
  id           Int    @id @default(autoincrement())
  refreshToken String @unique
  adminId      Int    @unique
}

model Subtitles {
  id        Int      @id @default(autoincrement())
  src       String
  Episode   Episode? @relation("EpisodeToSubtitles", fields: [episodeId], references: [id])
  episodeId Int?     @map("episode_id")
}
